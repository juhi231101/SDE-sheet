Palindrome Linked List

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head.next == null){
            return true;
        }
        ListNode f = head;
        ListNode s = head;
        ListNode mark = null;
        while(f != null && f.next != null){
            f = f.next.next;
            mark = s;
            s = s.next;
        }
        ListNode p = s;
        ListNode c = p.next;
        ListNode n = null;
        if(c != null){
            n = c.next;
        }
        while(c != null){
            c.next = p;
            p = c;
            c = n;
            if(n != null){
                n = n.next;
            }
        }
        s.next = null;
        mark.next = p;
        ListNode temp1 = head;
        ListNode temp2 = p;
        while(temp1 != p){
            if(temp1.val != temp2.val){
                return false;
            }
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        return true;
    }
}
